@page "/FPick"
@rendermode InteractiveAuto
@inject ILogger<FPicker> logger;
@inject IJSRuntime jsRuntime;
@inject NavigationManager NavigationManager

<h3>File Picker</h3>
<PageTitle>File Picker</PageTitle>

<div class="card">
    <div class="card-header">
        <h3 style="text-align:center">File Picker Form</h3>
    </div>
    <div class="card-body">
        <EditForm Enhance Model="@myFile" method="post" FormName="myFileForm" OnSubmit="SubmitFormAsync">
            <div class="row">
                <div class="col">
                    <label>File to upload</label> <br /><br />
                    <InputFile id="blazIF1" OnChange="@ShowPreviewAsync" /> <br />
                </div> @*column left *@
                <div class="col">
                    <label>This is your selected image</label> <br /><br />
                    <img id="pageimage" height=auto width="175" src="./Images/No Image Selected.png" alt="Select an image to share">
                </div> @*column right *@
            </div> @*row *@
            <br />
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>

</div>

<h3> Filename: @myFile.FileName </h3>



@code {

    [SupplyParameterFromForm]
    private FPickModel myFile { get; set; } = new();
    private IBrowserFile ibFile = null!;
    private IJSObjectReference? jsModule;
    private string? fileName = "./Images/No Image Selected.png";
    
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            jsModule = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/FPicker.razor.js");
    }
    private async Task SubmitFormAsync()
    {
        await jsModule!.InvokeVoidAsync("blazorRevokeObjectURL");
        logger.LogInformation("Form submitted");
        NavigationManager.NavigateTo("/");
    }

    private async Task ShowPreviewAsync(InputFileChangeEventArgs e)
    @* private void ShowPreview(InputFileChangeEventArgs e) *@
    {
        ibFile = e.File;
        if (ibFile != null)
        {
            fileName = ibFile!.Name;
            await jsModule!.InvokeVoidAsync("loadFileJS2");
            @* await jsModule.InvokeVoidAsync("debugMsg"); *@
            
            logger.LogInformation("File: " + fileName);
        }
        else 
        {            
            //await jsRuntime.InvokeVoidAsync("ResetFilePicker");
            logger.LogInformation("Issue with file Good");
        }
    }
}
